TOOLCHAIN_PATH ?= /usr/bin/

ifdef SEGGER_SERIAL
JLINKEXE_OPTION = -SelectEmuBySn $(SEGGER_SERIAL)
JLINKGDBSERVER_OPTION = -select USB=$(SEGGER_SERIAL)
endif

MAKE_BUILD_FOLDER = mkdir -p $(OUTPUT_PATH)

JLINK = -JLinkExe $(JLINKEXE_OPTION)
JLINKGDBSERVER = JLinkGDBServer $(JLINKGDBSERVER_OPTION)

SOFTDEVICE_OUTPUT = $(OUTPUT_PATH)$(notdir $(SOFTDEVICE))

clean:
	rm -rf $(OUTPUT_PATH)
	rm -f *.jlink
	rm -f JLink.log
	rm -f .gdbinit

flash: all flash.jlink 
	$(JLINK) flash.jlink
	
flash.jlink:
	echo "device nrf51822\nspeed 1000\nr\nloadbin $(BIN) $(FLASH_START_ADDRESS)\nr\ng\nexit\n" > flash.jlink
	
flash-softdevice: erase-all flash-softdevice.jlink 
ifndef SOFTDEVICE
	$(error "You need to set the SOFTDEVICE command-line parameter to a path (without spaces) to the softdevice hex-file")
endif

	# Convert from hex to binary. Split original hex in two to avoid huge (>250 MB) binary file with just 0s. 
	$(OBJCOPY) -Iihex -Obinary --remove-section .sec3 $(SOFTDEVICE) $(SOFTDEVICE_OUTPUT:.hex=_mainpart.bin)
	$(OBJCOPY) -Iihex -Obinary --remove-section .sec1 --remove-section .sec2 $(SOFTDEVICE) $(SOFTDEVICE_OUTPUT:.hex=_uicr.bin)
	$(JLINK) flash-softdevice.jlink

flash-softdevice.jlink:
	# Write to NVMC to enable write. Write mainpart, write UICR. Assumes device is erased.
	echo "w4 4001e504 1\nloadbin \"$(SOFTDEVICE_OUTPUT:.hex=_mainpart.bin)\" 0\nloadbin \"$(SOFTDEVICE_OUTPUT:.hex=_uicr.bin)\" 0x10001000\nr\ng\nexit\n" > flash-softdevice.jlink

recover: recover.jlink erase-all.jlink pin-reset.jlink
	$(JLINK) recover.jlink
	$(JLINK) erase-all.jlink
	$(JLINK) pin-reset.jlink

recover.jlink:
	echo "si 0\nt0\nsleep 1\ntck1\nsleep 1\nt1\nsleep 2\nt0\nsleep 2\nt1\nsleep 2\nt0\nsleep 2\nt1\nsleep 2\nt0\nsleep 2\nt1\nsleep 2\nt0\nsleep 2\nt1\nsleep 2\nt0\nsleep 2\nt1\nsleep 2\nt0\nsleep 2\nt1\nsleep 2\ntck0\nsleep 100\nsi 1\nr\nexit\n" > recover.jlink

pin-reset.jlink:
	echo "device nrf51822\nw4 40000544 1\nr\nexit\n" > pin-reset.jlink

pin-reset: pin-reset.jlink
	$(JLINK) pin-reset.jlink

reset: reset.jlink
	$(JLINK) reset.jlink

reset.jlink:
	echo "device nrf51822\nr\ng\nexit\n" > reset.jlink

erase-all: erase-all.jlink
	$(JLINK) erase-all.jlink

erase-all.jlink:
	# Write to NVMC to enable erase, do erase all, wait for completion. reset
	echo "device nrf51822\nw4 4001e504 2\nw4 4001e50c 1\nsleep 100\nr\nexit\n" > erase-all.jlink

startdebug: .gdbinit
	killall $(JLINKGDBSERVER) || echo "No previous GDB server session found. That's OK."
	$(JLINKGDBSERVER) -if swd -device nrf51822 -speed 1000 -port $(GDB_PORT_NUMBER) &
	sleep 1
	$(GDB) $(ELF) -ex "target remote :$(GDB_PORT_NUMBER)"

.gdbinit:
	echo "target remote localhost:$(GDB_PORT_NUMBER)\nmonitor flash download = 1\nmonitor flash device = nrf51822\nbreak main\nmon reset\n" > .gdbinit

.PHONY: flash flash-softdevice erase-all startdebug 
